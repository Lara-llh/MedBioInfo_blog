{
  "hash": "7293d20cb68126badbccde3614e1de78",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualize your data with ggplot\"\nauthor: \"Lara Leal\"\ndate: \"2025-10-10\"\nccategories: [info, code]\nimage: \"logo_ggplot.png\"\nformat: \n    html:\n        code-copy: true\nexecute:\n  echo: true\n---\n\nAfter you have finished your downstream analyses, you will want to visualize your results.\n\n`R` has a powefull package, called [ggplot](https://ggplot2.tidyverse.org) that is very versatile. We work with it a lot, so we will present it to you today.\n\nIn order to understand better the possibilities of ggplot, we are going to try them out in this [tutorial](https://nbisweden.github.io/raukr-2023/labs/ggplot/) from Roy Francis at NBIS.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# -----------------------------\n# Load packages safely\n# -----------------------------\n\n# List all packages you need\npackages <- c(\n  \"dplyr\", \"tidyr\", \"stringr\",\n  \"ggplot2\", \"ggrepel\", \"patchwork\", \"extrafont\"\n)\n\n# Function to check if package is installed, load if yes\nsafe_load <- function(pkg) {\n  if (!requireNamespace(pkg, quietly = TRUE)) {\n    message(sprintf(\"Package '%s' is not installed. Skipping.\", pkg))\n  } else {\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Load all packages\ninvisible(lapply(packages, safe_load))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistering fonts with R\n```\n\n\n:::\n\n```{.r .cell-code}\n# -----------------------------\n# Load fonts (optional)\n# -----------------------------\nif (\"extrafont\" %in% installed.packages()[, \"Package\"]) {\n  # Only try to load fonts if extrafont is installed\n  suppressMessages(loadfonts())  # suppress messages during Quarto render\n}\n\n# -----------------------------\n# Data loading and plots \n# -----------------------------\n\ndata(\"iris\")\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(data=iris)+\n  geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) #basic scatter plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point()+\n  geom_smooth(method=\"lm\") #add a regression line\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species))+\n  geom_point()+\n  geom_smooth(method=\"lm\") #add colours\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species))+\n  geom_smooth(method=\"lm\") #add colours but keep only one regression line\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species),size=3)+\n  geom_smooth(method=\"lm\") #change the size of the points\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-5.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width))+\n  geom_smooth(method=\"lm\") #add another subgoup, in this case the sepal.width\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-6.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_manual(values=c(\"red\",\"blue\",\"green\")) #specify colours\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-7.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\") #map the colours to a continous variable\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-8.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_continuous(name=\"New Legend Title\")+\n  labs(title=\"This Is A Title\",subtitle=\"This is a subtitle\",x=\" Petal Length\", \n       y=\"Petal Width\", caption=\"This is a little caption.\") #add titles\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-9.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_continuous(name=\"New Legend Title\")+\n  scale_x_continuous(breaks=1:8)+\n  labs(title=\"This Is A Title\",subtitle=\"This is a subtitle\",x=\" Petal Length\", \n       y=\"Petal Width\", caption=\"This is a little caption.\") #modify the axis, start with 1,2,3\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-10.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_continuous(name=\"New Legend Title\")+\n  scale_x_continuous(breaks=1:8)+\n  labs(title=\"This Is A Title\",subtitle=\"This is a subtitle\",x=\" Petal Length\", \n       y=\"Petal Width\", caption=\"This is a little caption.\")+\n  facet_wrap(~Species) #create subplots using faceting function\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-11.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_continuous(name=\"New Legend Title\")+\n  scale_x_continuous(breaks=1:8)+\n  labs(title=\"This Is A Title\",subtitle=\"This is a subtitle\",x=\" Petal Length\", \n       y=\"Petal Width\", caption=\"This is a little caption.\")+\n  facet_wrap(~Species)+\n  theme_bw() #change the look of the plot by using the default theme_bw option\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-12.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_continuous(name=\"New Legend Title\")+\n  scale_x_continuous(breaks=1:8)+\n  labs(title=\"This Is A Title\",subtitle=\"This is a subtitle\",x=\" Petal Length\", \n       y=\"Petal Width\", caption=\"This is a little caption.\")+\n  facet_wrap(~Species)+\n  theme_bw()+\n  theme(\n    axis.title=element_text(color=\"Blue\",face=\"bold\"),\n    plot.title=element_text(color=\"Green\",face=\"bold\"),\n    plot.subtitle=element_text(color=\"Pink\"),\n    panel.grid=element_blank()\n  ) #use the theme to chnage the colours of the axis and title/subtitle\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-13.png){width=672}\n:::\n\n```{.r .cell-code}\nnewtheme <- theme(\n  axis.title=element_text(color=\"lightblue1\",face=\"bold\"),\n  plot.title=element_text(color=\"khaki4\",face=\"bold\"),\n  plot.subtitle=element_text(color=\"lavender\"),\n  panel.grid=element_blank()) #this will save the theme and afterwards this same theme can be reused\n\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Sepal.Width))+\n  geom_smooth(method=\"lm\")+\n  scale_color_continuous(name=\"New Legend Title\")+\n  scale_x_continuous(breaks=1:8)+\n  labs(title=\"This Is A Title\",subtitle=\"This is a subtitle\",x=\" Petal Length\", \n       y=\"Petal Width\", caption=\"This is a little caption.\")+\n  facet_wrap(~Species)+\n  theme_bw()+\n  newtheme\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-14.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width)) #it shows 2 legends\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-15.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width))+\n  guides(size=\"none\") #we removed one legend\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-16.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width),show.legend=FALSE) #turning off both legends using geom\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-17.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width))+\n  theme(legend.position=\"top\",\n        legend.justification=\"right\") #use theme to move the position of the legends\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-18.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species,size=Sepal.Width))+\n  guides(size=guide_legend(nrow=2,byrow=TRUE),\n         color=guide_legend(nrow=3,byrow=T))+\n  theme(legend.position=\"top\",\n        legend.justification=\"right\") #control of the legends rows\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-19.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species))+\n  geom_text(aes(label=Species,hjust=0),nudge_x=0.5,size=3) # add labels to the data/points\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-20.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species))+\n  geom_label(aes(label=Species,hjust=0),nudge_x=0.5,size=3) #edit the labels theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-21.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species))+\n  geom_text_repel(aes(label=Species),size=3) #use ggrepel to avoid having the labels overlapping\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 130 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-22.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+\n  geom_point(aes(color=Species))+\n  annotate(\"text\",x=2.5,y=2.1,label=\"There is a random line here\")+\n  annotate(\"segment\",x=2,xend=4,y=1.5,yend=2) #add customn annotations\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-23.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Species,y=Petal.Width))+\n  geom_bar(stat=\"identity\") #BARPLOT\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-24.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=iris,mapping=aes(x=Species,y=Petal.Width))+\n  geom_bar(stat=\"identity\")+\n  coord_flip() #flip the axes\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-25.png){width=672}\n:::\n\n```{.r .cell-code}\ndfr <- iris %>% group_by(Species) %>% \n  summarise(mean=mean(Sepal.Length),sd=sd(Sepal.Length)) %>%\n  mutate(high=mean+sd,low=mean-sd) #mean and standard deviation \n\nggplot(data=dfr,mapping=aes(x=Species,y=mean,color=Species))+\n  geom_point(size=4)+\n  geom_errorbar(aes(ymax=high,ymin=low),width=0.2) #plotting the error bars\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-26.png){width=672}\n:::\n\n```{.r .cell-code}\n###### ECONOMIST SCATTERPLOT #######\n\nec <- read.csv(\"/Users/lara/Downloads/data_economist.csv\",header=T) #import the data from the .csv file\nhead(ec) #read the data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  X     Country HDI.Rank   HDI CPI            Region\n1 1 Afghanistan      172 0.398 1.5      Asia Pacific\n2 2     Albania       70 0.739 3.1 East EU Cemt Asia\n3 3     Algeria       96 0.698 2.9              MENA\n4 4      Angola      148 0.486 2.0               SSA\n5 5   Argentina       45 0.797 3.0          Americas\n6 6     Armenia       86 0.716 2.6 East EU Cemt Asia\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(ec) #check that HDI and CPI are numerical variables and Region is a categorical one/factor\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t173 obs. of  6 variables:\n $ X       : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Country : chr  \"Afghanistan\" \"Albania\" \"Algeria\" \"Angola\" ...\n $ HDI.Rank: int  172 70 96 148 45 86 2 19 91 53 ...\n $ HDI     : num  0.398 0.739 0.698 0.486 0.797 0.716 0.929 0.885 0.7 0.771 ...\n $ CPI     : num  1.5 3.1 2.9 2 3 2.6 8.8 7.8 2.4 7.3 ...\n $ Region  : chr  \"Asia Pacific\" \"East EU Cemt Asia\" \"MENA\" \"SSA\" ...\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(ec$Region) # we can't see the levels, therefore we need to modify the Regions variable\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nec$Region <- factor(ec$Region,levels = c(\"EU W. Europe\",\n                                         \"Americas\",\n                                         \"Asia Pacific\",\n                                         \"East EU Cemt Asia\",\n                                         \"MENA\",\n                                         \"SSA\"),\n                    labels = c(\"OECD\",\n                               \"Americas\",\n                               \"Asia &\\nOceania\",\n                               \"Central &\\nEastern Europe\",\n                               \"Middle East &\\nNorth Africa\",\n                               \"Sub-Saharan\\nAfrica\")) #use factor levels and labels to rename factors\n\nlevels(ec$Region) #check that we have made the change\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"OECD\"                        \"Americas\"                   \n[3] \"Asia &\\nOceania\"             \"Central &\\nEastern Europe\"  \n[5] \"Middle East &\\nNorth Africa\" \"Sub-Saharan\\nAfrica\"        \n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(ec,aes(x=CPI,y=HDI,color=Region))+\n  geom_point(shape=21,size=3,stroke=0.8,fill=\"white\") #generate a plot with points without fill. \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-27.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(ec,aes(x=CPI,y=HDI,color=Region))+\n  geom_point(shape=21,size=3,stroke=0.8,fill=\"white\")+\n  geom_smooth(method=\"lm\",formula=y~poly(x,2),se=F,size=0.6,color=\"red\") #add a trendline in red\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-28.png){width=672}\n:::\n\n```{.r .cell-code}\np <- ggplot(ec,aes(x=CPI,y=HDI,color=Region))+\n  geom_smooth(aes(fill=\"red\"),method=\"lm\",formula=y~poly(x,2),se=F,color=\"red\",size=0.6)+\n  geom_point(shape=21,size=3,stroke=0.8,fill=\"white\") #we want the points on top of the line so we assign the plot to a variable and alter the order of geom_smooth and geom_point\np #to print/see the plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-29.png){width=672}\n:::\n\n```{.r .cell-code}\nlabels <- c(\"Congo\",\"Afghanistan\",\"Sudan\",\"Myanmar\",\"Iraq\",\"Venezuela\",\"Russia\",\"Argentina\",\"Brazil\",\"Italy\",\"South Africa\",\"Cape Verde\",\"Bhutan\",\"Botswana\",\"Britian\",\"New Zealand\",\"Greece\",\"China\",\"India\",\"Rwanda\",\"Spain\",\"France\",\"United States\",\"Japan\",\"Norway\",\"Singapore\",\"Barbados\",\"Germany\")\n\np+geom_text(data=subset(ec,Country %in% labels),aes(label=Country),color=\"black\") #add the labels to the new coutries on the plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-30.png){width=672}\n:::\n\n```{.r .cell-code}\n########\n#IF YOU WAN TO CHANGE THE FONT \nfont_import(pattern=\"Georgia\",prompt=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScanning ttf files in /Library/Fonts/, /System/Library/Fonts, /System/Library/Fonts/Supplemental, ~/Library/Fonts/ ...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nExtracting .afm files from .ttf files...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n/System/Library/Fonts/SFGeorgian.ttf : -SFGeorgian-Regular already registered in fonts database. Skipping.\n/System/Library/Fonts/SFGeorgianRounded.ttf : -SFGeorgianRounded-Regular already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf : Georgia-BoldItalic already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf : Georgia-BoldItalic already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia Bold.ttf : Georgia-Bold already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia Bold.ttf : Georgia-Bold already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia Italic.ttf : Georgia-Italic already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia Italic.ttf : Georgia-Italic already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia.ttf : Georgia already registered in fonts database. Skipping.\n/System/Library/Fonts/Supplemental/Georgia.ttf : Georgia already registered in fonts database. Skipping.\nFound FontName for 0 fonts.\nScanning afm files in /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/extrafontdb/metrics\n```\n\n\n:::\n\n```{.r .cell-code}\n# load fonts for pdf\n#loadfonts()\n# list available fonts in R\n#fonts()\n########\n\np+geom_text(data=subset(ec,Country %in% labels),aes(label=Country),\n            color=\"black\",family=\"Georgia\") #change the font of the labels\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-31.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\np <- p+geom_text_repel(data=subset(ec,Country %in% labels),aes(label=Country),\n                       color=\"black\",box.padding=unit(1,'lines'),segment.size=0.25,\n                       size=3,family=\"Georgia\") #solve the overlap of the labels\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-32.png){width=672}\n:::\n\n```{.r .cell-code}\np <- p+scale_x_continuous(name=\"Corruption Perceptions Index, 2011 (10=least corrupt)\",\n                          breaks=1:10,limits=c(1,10))+\n  scale_y_continuous(name=\"Human Development Index, 2011 (1=best)\",\n                     breaks=seq(from=0,to=1,by=0.1),limits=c(0.2,1)) #adjust the axes\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-33.png){width=672}\n:::\n\n```{.r .cell-code}\np <- p+scale_color_manual(values=c(\"#23576E\",\"#099FDB\",\"#29B00E\", \"#208F84\",\"#F55840\",\"#924F3E\"))+\n  scale_fill_manual(name=\"trend\",values=\"red\",labels=expression(paste(R^2,\"=52%\"))) #to change the colors of the points and the red fill label \np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-34.png){width=672}\n:::\n\n```{.r .cell-code}\n#I don't want to change the colors so I'm just going to add the new label\np <- p+scale_fill_manual(name=\"trend\",values=\"red\",labels=expression(paste(R^2,\"=52%\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-35.png){width=672}\n:::\n\n```{.r .cell-code}\np <- p+labs(title=\"Corruption and human development\",\n            caption=\"Sources: Transparency International; UN Human Development Report\") #add a title to the plot \np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-36.png){width=672}\n:::\n\n```{.r .cell-code}\np <- p+guides(color=guide_legend(nrow=1))+\n  theme_bw(base_family=\"Georgia\")+\n  theme(legend.position=\"top\") #move the legend to the top and change the font in all the text\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-37.png){width=672}\n:::\n\n```{.r .cell-code}\n### Now we do some careful refining with themes.\n\n#Turn off minor gridlines\n#Turn off major gridlines on x-axis\n#Remove the gray background\n#Remove panel border\n#Remove legend titles\n#Make axes titles italic\n#Turn off y-axis ticks\n#Change x-axis ticks to color grey60\n#Make plot title bold\n#Decrease size of caption to size 8\n\np+theme(panel.grid.minor=element_blank(),\n        panel.grid.major.x=element_blank(),\n        panel.background=element_blank(),\n        panel.border=element_blank(),\n        legend.title=element_blank(),\n        axis.title=element_text(face=\"italic\"),\n        axis.ticks.y=element_blank(),\n        axis.ticks.x=element_line(color=\"grey60\"),\n        plot.title=element_text(face=\"bold\"),\n        plot.caption=element_text(hjust=0,size=8))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-38.png){width=672}\n:::\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.1 (2025-06-13)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sequoia 15.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Stockholm\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] extrafont_0.20  patchwork_1.3.2 ggrepel_0.9.6   ggplot2_4.0.0  \n[5] stringr_1.5.2   tidyr_1.3.1     dplyr_1.1.4    \n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-3       gtable_0.3.6       jsonlite_2.0.0     compiler_4.5.1    \n [5] tidyselect_1.2.1   Rcpp_1.1.0         splines_4.5.1      scales_1.4.0      \n [9] yaml_2.3.10        fastmap_1.2.0      lattice_0.22-7     R6_2.6.1          \n[13] labeling_0.4.3     generics_0.1.4     knitr_1.50         tibble_3.3.0      \n[17] pillar_1.11.1      RColorBrewer_1.1-3 rlang_1.1.6        Rttf2pt1_1.3.14   \n[21] stringi_1.8.7      xfun_0.53          S7_0.2.0           cli_3.6.5         \n[25] mgcv_1.9-3         withr_3.0.2        magrittr_2.0.4     digest_0.6.37     \n[29] grid_4.5.1         nlme_3.1-168       lifecycle_1.0.4    vctrs_0.6.5       \n[33] evaluate_1.0.5     glue_1.8.0         extrafontdb_1.1    farver_2.1.2      \n[37] rmarkdown_2.30     purrr_1.1.0        tools_4.5.1        pkgconfig_2.0.3   \n[41] htmltools_0.5.8.1 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}