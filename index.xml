<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>MedBioInfo Applied Bioinformatics blog by Lara</title>
<link>https://Lara-llh.github.io/MedBioInfo_blog/</link>
<atom:link href="https://Lara-llh.github.io/MedBioInfo_blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog built with Quarto</description>
<generator>quarto-1.8.25</generator>
<lastBuildDate>Thu, 09 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Nextflow RNAseq pipeline</title>
  <dc:creator>Lara Leal</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_RNAseq_pipeline/</link>
  <description><![CDATA[ 






<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_RNAseq_pipeline/dna-7094409_1280.jpg" class="post-header img-fluid"></p>
<p>In a real-world biomedical example, we will implement a proof of concept workflow that:</p>
<pre><code>1. Indexes the transcriptome file
2. Performs quality controls
3. Performs quantifications
4. Creates a MultiQC report</code></pre>
<p>In order to do so, 7 scripts will be used, an each of them builds upon the other. The scripts will use the following third-party tools:</p>
<pre><code>- Salmon: tool for quantifing molecules known as transcripts through a type of data called RNA-seq. 
- FastQC: tool to perform control for high throughput sequence data, a way to assess the quality of your data. 
- MultiQC: searches a given directory for analysis logs and compiles a HTML report. It's a widely used tool, perfect for summarizing the output from numerous bioinformatics tools. </code></pre>
<section id="set-the-executor" class="level2">
<h2 class="anchored" data-anchor-id="set-the-executor"><strong>Set the executor</strong></h2>
<p>So far we have used the local executor, but the pipeline we are going to work with now is more complicated and requires more computing power. We will set <code>slurm</code> as the executor, in order to do so we will change it in a file called <code>nextflow.config</code>. It should loook like the following:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process{</span></span>
<span id="cb3-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slurm"</span></span>
<span id="cb3-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2.h'</span>  // Set default time limit for all processes</span>
<span id="cb3-4">    </span>
<span id="cb3-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Other settings</span>
<span id="cb3-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 4</span>
<span id="cb3-7"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">resume</span> = true</span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">singularity.enabled</span> = true</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> {</span>
<span id="cb3-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">account</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'your_project_account'</span></span>
<span id="cb3-14"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>With this script we:</p>
<pre><code>- Set the executor for every process to slurm.
- Set resume to true, so it is automatically used for all our runs (which means we do not have to specify this in our nextflow run command anymore).
- Enable singularity and set some singularity run options.
- Specify the account name for the slurm execution.</code></pre>
<p>This <code>nextflow.config</code> file is implicitly called when we execute nextflow from the folder it is in. We don’t need to explicitily name it in the run command.</p>
</section>
<section id="define-the-workflow-parameters" class="level2">
<h2 class="anchored" data-anchor-id="define-the-workflow-parameters"><strong>Define the workflow parameters</strong></h2>
<p>Parameter are inputs and options that can be changed when the workflow is executed.</p>
<p>An example found in <code>script1.nf</code> of the training material is:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">println</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reads: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.reads"</span></span></code></pre></div></div>
<p>And it is run with the following command:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run script1.nf</span></code></pre></div></div>
<p>Now we are going to modify the script adding a fourth parameter called <code>outdir</code> and we will set it to the default path that will be used as the workflow output directory.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/results"</span></span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">println</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reads: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir"</span></span></code></pre></div></div>
</section>
<section id="create-a-transcriptome-index-file" class="level2">
<h2 class="anchored" data-anchor-id="create-a-transcriptome-index-file"><strong>Create a transcriptome index file</strong></h2>
<p>In Nextflow you can execute any command or script by using a <code>process definition</code>. A process is defined by providing 3 main declarations: the input, the output and the command script.</p>
<p>Let’s add a transcriptome index processing step:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/results"</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">println</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reads: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir"</span></span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> INDEX {</span>
<span id="cb8-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb8-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> transcriptome</span>
<span id="cb8-12">    </span>
<span id="cb8-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb8-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'salmon_index'</span></span>
<span id="cb8-15"></span>
<span id="cb8-16">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb8-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    salmon index --threads </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$task</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.cpus -t </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$transcriptome</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -i salmon_index</span></span>
<span id="cb8-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb8-20"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>Additionally, we have to add a workflow scope containing an input channel definiton and the index process:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb9-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch</span> = INDEX<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file,</span> checkIfExists: true<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb9-3"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>In this case the <code>params.transcriptome_file</code> parameter is used as the input for the index process. The index process (using salmon) creates salmon_index, an indexed transcriptome that is passed as an output to the index_ch channel.</p>
<p>To run it we will use:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run script1.nf </span></code></pre></div></div>
<p>The workflow will not work because first we have to add Salmon to our environment.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add salmon</span></code></pre></div></div>
<p>Adding a container to the process and running the tool via the container is more reproducible than adding it to your environment. You can do so the following way:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://depot.galaxyproject.org/singularity/salmon:1.10.1--h7e5ed60_0'</span></span></code></pre></div></div>
<p>Additonally, you can also specify a process specific output directory in the process block.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/salmon"</span></span></code></pre></div></div>
<p>Nextflow is big on execution abstraction. Therefore, we will specify the allocated time and cpus for this specific process in the <code>nextflow.config</code> file.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">withName:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'INDEX'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = 15.m</span>
<span id="cb14-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 2</span>
<span id="cb14-4"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>The final version of <code>script1.nf</code> should look like this:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb15-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb15-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb15-6"></span>
<span id="cb15-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/results"</span></span>
<span id="cb15-8"></span>
<span id="cb15-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">println</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reads: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir"</span></span>
<span id="cb15-10"></span>
<span id="cb15-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> INDEX {</span>
<span id="cb15-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb15-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> transcriptome</span>
<span id="cb15-14">    </span>
<span id="cb15-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://depot.galaxyproject.org/singularity/salmon:1.10.1--h7e5ed60_0'</span></span>
<span id="cb15-16">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/salmon"</span></span>
<span id="cb15-17"></span>
<span id="cb15-18">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb15-19">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'salmon_index'</span></span>
<span id="cb15-20"></span>
<span id="cb15-21">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb15-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb15-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    salmon index --threads </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$task</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.cpus -t </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$transcriptome</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -i salmon_index</span></span>
<span id="cb15-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb15-25"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-26"></span>
<span id="cb15-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb15-28">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch</span> = INDEX<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file,</span> checkIfExists: true<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb15-29"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>The <code>nextflow.config</code> file should look like this:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process{</span></span>
<span id="cb16-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slurm"</span></span>
<span id="cb16-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2.h'</span>  // Set default time limit for all processes</span>
<span id="cb16-4">    </span>
<span id="cb16-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Other settings</span>
<span id="cb16-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 4</span>
<span id="cb16-7">        </span>
<span id="cb16-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">withName:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'INDEX'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = 15.m</span>
<span id="cb16-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 2</span>
<span id="cb16-11">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-12"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-13"></span>
<span id="cb16-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">resume</span> = true</span>
<span id="cb16-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">singularity.enabled</span> = true</span>
<span id="cb16-16"></span>
<span id="cb16-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> {</span>
<span id="cb16-18">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">account</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb16-19"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>Run it using the following command:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run script1.nf </span></code></pre></div></div>
<p>Another option for this analysis is the following script3.nf</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb18-4"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> pipeline input parameters</span>
<span id="cb18-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*/</span></span>
<span id="cb18-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb18-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb18-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb18-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span></span>
<span id="cb18-10"></span>
<span id="cb18-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log.info</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    R N A S E Q - N F   P I P E L I N E</span></span>
<span id="cb18-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ===================================</span></span>
<span id="cb18-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    transcriptome: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.transcriptome_file</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    reads        : </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.reads</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    outdir       : </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.outdir</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb18-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.stripIndent()</span></span>
<span id="cb18-19"></span>
<span id="cb18-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">read_pairs_ch</span> = Channel.fromFilePairs<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb18-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_pairs_ch.view()</span></span></code></pre></div></div>
<p>The <code>read_pairs_ch.view()</code> command allows us to see how the read_pair_ch channel emits <code>tuples</code> composed of two elements, where the first is the read pair prefix and the second is a list representing actual files. It will print something similar to this:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[gut,</span> [/.../data/ggal/gut_1.fq, /.../data/ggal/gut_2.fq]]</span></code></pre></div></div>
<p>*Tuple: a data structure consisting of multiple parts.</p>
</section>
<section id="expression-quantification" class="level2">
<h2 class="anchored" data-anchor-id="expression-quantification"><strong>Expression quantification</strong></h2>
<p>We will add a gene expression quantification process to the script and a call to it within the workflow scope. Quantification requires the index transcriptome and RNA-seq read pair fastq files.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb20-4"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> pipeline input parameters</span>
<span id="cb20-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*/</span></span>
<span id="cb20-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb20-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb20-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb20-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span></span>
<span id="cb20-10"></span>
<span id="cb20-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log.info</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    R N A S E Q - N F   P I P E L I N E</span></span>
<span id="cb20-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ===================================</span></span>
<span id="cb20-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    transcriptome: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.transcriptome_file</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    reads        : </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.reads</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    outdir       : </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.outdir</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb20-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.stripIndent()</span></span>
<span id="cb20-19"></span>
<span id="cb20-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb20-21"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> define the <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">INDEX</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> process that creates a binary index</span>
<span id="cb20-22"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> given the transcriptome file</span>
<span id="cb20-23"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*/</span></span>
<span id="cb20-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> INDEX {</span>
<span id="cb20-25">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb20-26">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> transcriptome</span>
<span id="cb20-27"></span>
<span id="cb20-28">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://depot.galaxyproject.org/singularity/salmon:1.10.1--h7e5ed60_0'</span></span>
<span id="cb20-29">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/salmon_INDEX"</span></span>
<span id="cb20-30"></span>
<span id="cb20-31"></span>
<span id="cb20-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb20-33">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'salmon_index'</span></span>
<span id="cb20-34"></span>
<span id="cb20-35">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb20-36">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    salmon index --threads </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$task</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.cpus -t </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$transcriptome</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -i salmon_index</span></span>
<span id="cb20-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb20-39"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-40"></span>
<span id="cb20-41"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> QUANTIFICATION {</span>
<span id="cb20-42">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb20-43">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> salmon_index</span>
<span id="cb20-44">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> val<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sample_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> path<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reads</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-45"></span>
<span id="cb20-46">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://depot.galaxyproject.org/singularity/salmon:1.10.1--h7e5ed60_0'</span></span>
<span id="cb20-47">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/salmon_quantification"</span></span>
<span id="cb20-48"></span>
<span id="cb20-49"></span>
<span id="cb20-50">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb20-51">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sample_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb20-52"></span>
<span id="cb20-53">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb20-54">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    salmon quant --threads </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$task</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.cpus --libType=U -i </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$salmon_index</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -1 </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -2 </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -o </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sample_id</span></span>
<span id="cb20-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb20-57"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-58"></span>
<span id="cb20-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb20-60">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span></span>
<span id="cb20-61">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.fromFilePairs</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads,</span> checkIfExists: true<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-62">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.set</span> { read_pairs_ch }</span>
<span id="cb20-63"></span>
<span id="cb20-64">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch</span> = INDEX<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-65">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch</span> = QUANTIFICATION<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch,</span> read_pairs_ch<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-66">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span> = FASTQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">read_pairs_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-67">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">multiqc_ch</span> = MULTIQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch.mix</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.collect()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-68"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>In the workflow scope, note how the index_ch channel is assigned as output in the INDEX process.</p>
<p>Next, note that the first input channel for the quantification process is the previously declared index_ch, which contains the path to the salmon_index.</p>
<p>Also, note that the second input channel for the quantification process, is the read_pair_ch we just created. This being a tuple composed of two elements (a value: “sample_id” and a list of paths to the fastq reads: “reads”) in order to match the structure of the items emitted by the <code>fromFilePairs</code> channel factory.</p>
<p>The script can be run using:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run script4.nf </span></code></pre></div></div>
<p>The same script can be executed with more read files, as shown below:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run script4.nf <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--reads</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/ggal/*_{1,2}.fq'</span></span></code></pre></div></div>
<p>The quantification process will be executed multiple times. Nextflow parallelizes the execution of your workflow by providing multiple sets of input data to your script.</p>
<p>The process specific runtime environment definition for quantification can be added to the <code>nextflow.config</code> file, leaving the file as follow:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process{</span></span>
<span id="cb23-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slurm"</span></span>
<span id="cb23-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2.h'</span>  // Set default time limit for all processes</span>
<span id="cb23-4">    </span>
<span id="cb23-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Other settings</span>
<span id="cb23-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 4</span>
<span id="cb23-7">        </span>
<span id="cb23-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">withName:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'INDEX'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = 15.m</span>
<span id="cb23-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 2</span>
<span id="cb23-11">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-12"></span>
<span id="cb23-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">withName:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'QUANTIFICATION'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = 10.m</span>
<span id="cb23-15">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 2</span>
<span id="cb23-16">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-17"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-18"></span>
<span id="cb23-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">resume</span> = true</span>
<span id="cb23-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">singularity.enabled</span> = true</span>
<span id="cb23-21"></span>
<span id="cb23-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> {</span>
<span id="cb23-23">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">account</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb23-24"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
</section>
<section id="quality-control" class="level2">
<h2 class="anchored" data-anchor-id="quality-control"><strong>Quality control</strong></h2>
<p>Now we want to add another process using the FastQC to check the samples. The input is the same as the read pairs used in the quantification step.</p>
<p>In the <code>script4.nf</code> file we will have to add the following after the quantification process:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> FASTQC {</span>
<span id="cb24-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb24-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> val<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sample_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> path<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reads</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb24-4"></span>
<span id="cb24-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'oras://community.wave.seqera.io/library/fastqc:0.12.1--104d26ddd9519960'</span></span>
<span id="cb24-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/fastqc"</span></span>
<span id="cb24-7"></span>
<span id="cb24-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb24-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fastqc_</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sample_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb24-10"></span>
<span id="cb24-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb24-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb24-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    mkdir fastqc_</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_id}</span></span>
<span id="cb24-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    fastqc --noextract -o fastqc_</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb24-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb24-16"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span>    </span></code></pre></div></div>
<p>And the workflow needs to be updated aswell.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb25-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span></span>
<span id="cb25-3">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.fromFilePairs</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads,</span> checkIfExists: true<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb25-4">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.set</span> { read_pairs_ch }</span>
<span id="cb25-5"></span>
<span id="cb25-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch</span> = INDEX<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb25-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch</span> = QUANTIFICATION<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch,</span> read_pairs_ch<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb25-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span> = FASTQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">read_pairs_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div></div>
</section>
<section id="multiqc" class="level2">
<h2 class="anchored" data-anchor-id="multiqc"><strong>MultiQC</strong></h2>
<p>As a final step we will use MultiQC to generate a final report that will collect the outputs from the quantification and the FastQC processes.</p>
<p>In the <code>script4.nf</code> we will add a new process:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> MULTIQC {</span>
<span id="cb26-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb26-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span></span>
<span id="cb26-4"></span>
<span id="cb26-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'community.wave.seqera.io/library/multiqc:1.31--1efbafd542a23882'</span></span>
<span id="cb26-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/multiqc"</span></span>
<span id="cb26-7"></span>
<span id="cb26-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb26-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'multiqc_report.html'</span></span>
<span id="cb26-10"></span>
<span id="cb26-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb26-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb26-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    multiqc .</span></span>
<span id="cb26-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb26-15"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span>    </span></code></pre></div></div>
<p>And we will also have to update the workflow:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb27-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb27-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span></span>
<span id="cb27-3">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.fromFilePairs</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads,</span> checkIfExists: true<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb27-4">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.set</span> { read_pairs_ch }</span>
<span id="cb27-5"></span>
<span id="cb27-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch</span> = INDEX<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb27-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch</span> = QUANTIFICATION<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch,</span> read_pairs_ch<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb27-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span> = FASTQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">read_pairs_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb27-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">multiqc_ch</span> = MULTIQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch.mix</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.collect()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb27-10"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
</section>
<section id="scripts-summary" class="level2">
<h2 class="anchored" data-anchor-id="scripts-summary"><strong>SCRIPTS SUMMARY</strong></h2>
<p>Our final <code>script4.nf</code> should look like this:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb28-4"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> pipeline input parameters</span>
<span id="cb28-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*/</span></span>
<span id="cb28-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/gut_{1,2}.fq"</span></span>
<span id="cb28-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/data/ggal/transcriptome.fa"</span></span>
<span id="cb28-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.multiqc</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$projectDir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/multiqc"</span></span>
<span id="cb28-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span></span>
<span id="cb28-10"></span>
<span id="cb28-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log.info</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb28-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    R N A S E Q - N F   P I P E L I N E</span></span>
<span id="cb28-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ===================================</span></span>
<span id="cb28-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    transcriptome: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.transcriptome_file</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    reads        : </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.reads</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    outdir       : </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.outdir</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.stripIndent()</span></span>
<span id="cb28-19"></span>
<span id="cb28-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb28-21"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> define the <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">INDEX</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> process that creates a binary index</span>
<span id="cb28-22"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> given the transcriptome file</span>
<span id="cb28-23"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*/</span></span>
<span id="cb28-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> INDEX {</span>
<span id="cb28-25">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb28-26">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> transcriptome</span>
<span id="cb28-27"></span>
<span id="cb28-28">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://depot.galaxyproject.org/singularity/salmon:1.10.1--h7e5ed60_0'</span></span>
<span id="cb28-29">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/salmon_INDEX"</span></span>
<span id="cb28-30"></span>
<span id="cb28-31"></span>
<span id="cb28-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb28-33">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'salmon_index'</span></span>
<span id="cb28-34"></span>
<span id="cb28-35">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb28-36">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    salmon index --threads </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$task</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.cpus -t </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$transcriptome</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -i salmon_index</span></span>
<span id="cb28-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-39"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-40"></span>
<span id="cb28-41"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> QUANTIFICATION {</span>
<span id="cb28-42">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb28-43">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> salmon_index</span>
<span id="cb28-44">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> val<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sample_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> path<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reads</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-45"></span>
<span id="cb28-46">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://depot.galaxyproject.org/singularity/salmon:1.10.1--h7e5ed60_0'</span></span>
<span id="cb28-47">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/salmon_quantification"</span></span>
<span id="cb28-48"></span>
<span id="cb28-49"></span>
<span id="cb28-50">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb28-51">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sample_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb28-52"></span>
<span id="cb28-53">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb28-54">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    salmon quant --threads </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$task</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.cpus --libType=U -i </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$salmon_index</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -1 </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -2 </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> -o </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sample_id</span></span>
<span id="cb28-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-57"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-58"></span>
<span id="cb28-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> FASTQC {</span>
<span id="cb28-60">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb28-61">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> val<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sample_id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> path<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reads</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-62"></span>
<span id="cb28-63">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'oras://community.wave.seqera.io/library/fastqc:0.12.1--104d26ddd9519960'</span></span>
<span id="cb28-64">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/fastqc"</span></span>
<span id="cb28-65"></span>
<span id="cb28-66">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb28-67">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fastqc_</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sample_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb28-68"></span>
<span id="cb28-69">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb28-70">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    mkdir fastqc_</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_id}</span></span>
<span id="cb28-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    fastqc --noextract -o fastqc_</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${reads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb28-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-74"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span>    </span>
<span id="cb28-75"></span>
<span id="cb28-76"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> MULTIQC {</span>
<span id="cb28-77">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb28-78">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span></span>
<span id="cb28-79"></span>
<span id="cb28-80">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'community.wave.seqera.io/library/multiqc:1.31--1efbafd542a23882'</span></span>
<span id="cb28-81">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$params</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.outdir/multiqc"</span></span>
<span id="cb28-82"></span>
<span id="cb28-83">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb28-84">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'multiqc_report.html'</span></span>
<span id="cb28-85"></span>
<span id="cb28-86">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb28-87">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    multiqc .</span></span>
<span id="cb28-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-90"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span>    </span>
<span id="cb28-91"></span>
<span id="cb28-92"></span>
<span id="cb28-93"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb28-94">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span></span>
<span id="cb28-95">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.fromFilePairs</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads,</span> checkIfExists: true<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-96">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.set</span> { read_pairs_ch }</span>
<span id="cb28-97"></span>
<span id="cb28-98">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch</span> = INDEX<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.transcriptome_file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-99">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch</span> = QUANTIFICATION<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index_ch,</span> read_pairs_ch<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-100">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span> = FASTQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">read_pairs_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-101">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">multiqc_ch</span> = MULTIQC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quant_ch.mix</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.collect()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb28-102"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>And the <code>nextflow.config</code> file:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process{</span></span>
<span id="cb29-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slurm"</span></span>
<span id="cb29-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2.h'</span>  // Set default time limit for all processes</span>
<span id="cb29-4">    </span>
<span id="cb29-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Other settings</span>
<span id="cb29-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 4</span>
<span id="cb29-7">        </span>
<span id="cb29-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">withName:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'INDEX'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = 15.m</span>
<span id="cb29-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 2</span>
<span id="cb29-11">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-12"></span>
<span id="cb29-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">withName:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'QUANTIFICATION'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> = 10.m</span>
<span id="cb29-15">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpus</span> = 2</span>
<span id="cb29-16">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-17"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-18"></span>
<span id="cb29-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">resume</span> = true</span>
<span id="cb29-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">singularity.enabled</span> = true</span>
<span id="cb29-21"></span>
<span id="cb29-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> {</span>
<span id="cb29-23">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">account</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb29-24"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>


</section>

 ]]></description>
  <category>info</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_RNAseq_pipeline/</guid>
  <pubDate>Thu, 09 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_RNAseq_pipeline/dna-7094409_1280.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Nextflow Intro</title>
  <dc:creator>Lara Leal</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_Intro/</link>
  <description><![CDATA[ 






<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_Intro/Nextflow.png" class="post-header img-fluid"></p>
<p>Workflow managers allow you to develop an automated pipeline from your scripts that can then be run on a variety of systems.</p>
<p>The manager then coordinates the deployment of the scripts in the appropriate sequence, monitors the jobs, handles the file transfers between scripts, gathers the output, and handles re-execution of failed jobs for you. Workflow managed pipelines can run containers, which eliminates software installation and version conflicts.</p>
<p>There are two main workflow managers: <a href="https://www.snakemake.io">snakemake</a> and <a href="https://www.nextflow.io">nextflow</a>.</p>
<section id="nextflow" class="level2">
<h2 class="anchored" data-anchor-id="nextflow"><strong>Nextflow</strong></h2>
<p>In nextflow, your scripts are turned into processes, connected by channels that contain the data - input, output etc. The order of the processes, and their interaction with each other, is specfied in the workflow scope.</p>
<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_Intro/channel-process_fqc.png" class="img-fluid"></p>
<p>Important things about nextflow: - The <code>script</code> can be written in any language. - The modularity of the process allows to re-use existing scripts and processes easily. - The functional processes are separated from the executive ones, therefore the pipelines are higly interoperable and portable. - Pipelines can be very reproducible if they are integrated with version control tools (like git or bitbucket) and container technologies (apptainer or docker). - They are scalable, you can start testing with just a couple of samples and easily scale up to hundreds or thusands. Processes are run in parallele automatically when possible. - It resumes executions. Automatically checks the processes and can resume from a point of failure without having to re-compute already completed parts. - It’s open source.</p>
<section id="processes-and-channels" class="level3">
<h3 class="anchored" data-anchor-id="processes-and-channels">** Processes and Channels**</h3>
<p>The Netxflow workflows are made by combining different processes. This processes can be written in different lenguages as long as they can be executed by a Linux platform. Each process is executed independently, and different processes only comunicate via a first-in, first-out asynchronous queue. These queues are called channels, and any process can defined them as input and output. The interaction between these processes and the execution of the workflow is defined by these input output declarations.</p>
<p>This is how a basic Nextflow pipeline process block would look like:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> PROCESS_NAME{</span>
<span id="cb1-2"></span>
<span id="cb1-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb1-4">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span> z</span>
<span id="cb1-5">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span> y</span>
<span id="cb1-6">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span> x</span>
<span id="cb1-7"></span>
<span id="cb1-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> directives</span>
<span id="cb1-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb1-12">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">task1</span></span>
<span id="cb1-13">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">task2</span></span>
<span id="cb1-14">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">task3</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb1-17">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output</span> x</span>
<span id="cb1-18">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output</span> y</span>
<span id="cb1-19">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output</span> z</span>
<span id="cb1-20"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
</section>
<section id="execution-abstraction-running-fastqc" class="level3">
<h3 class="anchored" data-anchor-id="execution-abstraction-running-fastqc"><strong>Execution abstraction running fastQC</strong></h3>
<p>In Nextflow, the process defines what comand or script is executed, and the executor determines how that script is runned. By default, the processes are excuted on the local computer. The local executor is very useful in workflow development and testing, but when running real computational workflows other platforms are required, like a high-performance computing or cloud platform.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">srun</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> project_ID <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> 15:00 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 1 fastqc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--noextract</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> fastqc data data/sample_1.fastq.gz data/sample_2.fastq.gz </span></code></pre></div></div>
</section>
<section id="nextflow-code-example" class="level3">
<h3 class="anchored" data-anchor-id="nextflow-code-example"><strong>Nextflow code example</strong></h3>
<p>Script:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.greeting</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hello world!'</span></span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">greeting_ch</span> = Channel.of<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.greeting</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> SPLITLETTERS {</span>
<span id="cb3-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb3-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">val</span> x</span>
<span id="cb3-9"></span>
<span id="cb3-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb3-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chunk_*'</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb3-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    printf '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$x</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | split -b 6 - chunk_</span></span>
<span id="cb3-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb3-17"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> CONVERTTOUPPER {</span>
<span id="cb3-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb3-21">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> y</span>
<span id="cb3-22"></span>
<span id="cb3-23">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb3-24">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stdout</span></span>
<span id="cb3-25"></span>
<span id="cb3-26">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb3-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    cat </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$y</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> | tr '[a-z]' '[A-Z]' </span></span>
<span id="cb3-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb3-30"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-31"></span>
<span id="cb3-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb3-33">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">letters_ch</span> = SPLITLETTERS<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">greeting_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-34">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">results_ch</span> = CONVERTTOUPPER<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">letters_ch.flatten()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-35">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">results_ch.view{</span> it }</span>
<span id="cb3-36"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>To run it:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run hello.nf</span></code></pre></div></div>
<p>The output:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">N</span> E X T F L O W   ~  version 25.04.7</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Launching</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hello.nf</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">jolly_faraday</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> DSL2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> revision: f5e335f983</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>  local <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">3</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[96/fd5f07]</span> SPLITLETTERS <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[100%]</span> 1 of 1 ✔</span>
<span id="cb5-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[7e/dad424]</span> CONVERTTOUPPER <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[100%]</span> 2 of 2 ✔</span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HELLO</span> </span>
<span id="cb5-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WORLD!</span></span></code></pre></div></div>
</section>
<section id="modify-and-resume" class="level3">
<h3 class="anchored" data-anchor-id="modify-and-resume"><strong>Modify and resume</strong></h3>
<p>Nextflow keeps track of all the processes executed and if you modify some prts of your script, only the processes that are changed will be re-executed. In this case, it will use the cached result from the processes that weren’t changed.</p>
</section>
<section id="workflow-parameters" class="level3">
<h3 class="anchored" data-anchor-id="workflow-parameters"><strong>Workflow parameters</strong></h3>
<p>The workflow parameters are simply declared by prepending the prefix params to a variable name, separated by a ‘.’ (e.g.&nbsp;params.greetings). Their value can be specified on the comand line:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow run hello.nf <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-resume</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--greeting</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bonjour le monde!'</span></span></code></pre></div></div>
</section>
<section id="clean-up-nextflow" class="level3">
<h3 class="anchored" data-anchor-id="clean-up-nextflow"><strong>Clean up Nextflow</strong></h3>
<p>Periodically, it makes sense to clean up your nextflow working directory. You can do that manually, but the non-descriptive nature of the file system makes that difficult.</p>
<p>Nextflow keeps track of your runs that have been executed from the current directory. The folowing comand will show you the executions log and runtime information of all the runs.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run nextflow log</span></code></pre></div></div>
<p>You can clean the porject cache and th work directories with the folowing comand:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nextflow</span> clean</span></code></pre></div></div>
<p>You can also specify the run or runs that you want to eliminate. <a href="https://www.nextflow.io/docs/latest/reference/cli.html#clean">Here</a> you can find a more extensive explanation of the different options.</p>


</section>
</section>

 ]]></description>
  <category>info</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_Intro/</guid>
  <pubDate>Wed, 08 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://Lara-llh.github.io/MedBioInfo_blog/posts/Nextflow_Intro/Nextflow.png" medium="image" type="image/png" height="23" width="144"/>
</item>
<item>
  <title>Working with environments</title>
  <dc:creator>Lara Leal</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/Working-with-environments/</link>
  <description><![CDATA[ 






<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/Working-with-environments/pixi.webp" class="post-header img-fluid"></p>
<p>The different operating systems support different tools. In order to solve this issue, we can use environments, which wil help us make our bioinformatics work more reproducible. This environments specifiy the tools needed to perform the task and the managers inside the environment will make sure to install these tools with their dependencies so that you can run the analysis in your device.</p>
<p>There are different types of environments, like Conda, but in this course we are going to focus on Pixi.</p>
<section id="install-pixi" class="level2">
<h2 class="anchored" data-anchor-id="install-pixi">Install Pixi</h2>
<p>In order to install pixi just run the following command in your terminal:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://pixi.sh/install.sh <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span></span></code></pre></div></div>
<p>You can find more infromation about pixi <a href="https://pixi.sh/latest/installation/">here</a></p>
</section>
<section id="create-an-environment" class="level2">
<h2 class="anchored" data-anchor-id="create-an-environment">Create an environment</h2>
<p>To create an environment for your project we will ask pixi to initialize a folder named <code>pixi_training</code>. We will also add conda-forge and bioconda channles with the <code>-c</code> flag.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> init pixi_training <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda</span></code></pre></div></div>
<p>If you look in the new folder created you find a file called <code>pixi.toml</code>.</p>
<section id="pixi.toml" class="level4">
<h4 class="anchored" data-anchor-id="pixi.toml"><strong>1. pixi.toml</strong></h4>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[workspace]</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">channels</span> = [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"conda-forge"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bioconda"</span>]</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amrei_pixi_training"</span></span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">platforms</span> = <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"osx-arm64"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">version</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.1.0"</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[tasks]</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[dependencies]</span></span></code></pre></div></div>
<p>This is how the <code>pixi.toml</code>file would like like after creating it. This file gives you information about your project:</p>
<ul>
<li>Workspace: An overview of the environment: the channels that we added when we called <code>pixi init -c</code>, the name of the environment, the operating system and the version.</li>
<li>Tasks (not covered)</li>
<li>Dependencies: it will list the different tools that you install within the environment.</li>
</ul>
</section>
<section id="pixi.lock" class="level4">
<h4 class="anchored" data-anchor-id="pixi.lock"><strong>2. pixi.lock</strong></h4>
<p>Adding a tool or a dependency to the environemnt will generate another file called <code>pixi.lock</code>.</p>
<p>This file contains information about the channels added to you environment, where the packages were dowloaded from, liceses information and more.</p>
<div class="callout callout-style-simple callout-none no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>DO NOT DELETE <code>pixi.toml</code>or <code>pixi.lock</code> files, it will break your environment!</p>
</div>
</div>
</div>
</section>
</section>
<section id="adding-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="adding-dependencies">Adding dependencies</h2>
<p>The comand <code>pixi add</code> will tell Pixi to install a specified program for you and it will be added to the dependencies list found in the <code>pixi.toml</code> file that we talked about in the previous section.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> pixi_training</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add quarto</span></code></pre></div></div>
<p>If we now check the dependencies in the <code>pixi.toml</code> file we would see the new program added <code>quarto = "&gt;=1.7.32,&lt;2"</code>(the versions might be different).</p>
</section>
<section id="running-a-package" class="level2">
<h2 class="anchored" data-anchor-id="running-a-package">Running a package</h2>
<p>In order to run a package we use the <code>run</code> command followed by the package.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run quarto <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div></div>
<p>You can substitute <code>quarto</code> with any other package followed by the pertinent commands.</p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/Working-with-environments/</guid>
  <pubDate>Tue, 07 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://Lara-llh.github.io/MedBioInfo_blog/posts/Working-with-environments/pixi_cover.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>How to use and create containers</title>
  <dc:creator>Lara Leal</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-use-and-create-containers/</link>
  <description><![CDATA[ 






<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-use-and-create-containers/containers.jpg.jpg" class="post-header img-fluid"></p>
<p>Reproducibility in bioinformatics can be a big problem. The same code can be runned by you in you computer and give some results, and when given to someone else it gives other results or it doesn’t fully work.</p>
<p>In order to resolve this issue, different tools were developed. You can use environments or containers.</p>
<div class="callout callout-style-simple callout-none no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li><strong>Environments:</strong> they conform an isolated system that contains all the necessary software (operating system, libraries, tools, packages…) needed to run the task in hand.</li>
<li><strong>Containers:</strong> they are stand-alone software pieces that specify the operating system, all dependencies and software of an isolated environment. They are built and exchanged as container images and need a container management tool to take this images and build the container. This container images are immutable and therefore stables over time.</li>
</ul>
</div>
</div>
</div>
<section id="containers" class="level2">
<h2 class="anchored" data-anchor-id="containers">CONTAINERS</h2>
<p>There are different programs taht can be use to build and run containers: <a href="https://www.docker.com">Docker</a>, <a href="https://apptainer.org">Appptainer</a> or <a href="https://podman.io">Podman</a> are the most widely used.</p>
<section id="how-to-obtain-these-containers" class="level3">
<h3 class="anchored" data-anchor-id="how-to-obtain-these-containers"><strong>1. How to obtain these containers</strong></h3>
<p>There are several repositories in which people publish container images, two of the most commonly used are: <a href="https://hub.docker.com">Dockerhub</a> and <a href="https://seqera.io/containers/">Seqera</a>.</p>
<section id="dockerhub" class="level4">
<h4 class="anchored" data-anchor-id="dockerhub">Dockerhub</h4>
<p>Once you access their webpage (no need to create an account), you can search for the software that you need. In this case we are looking for <strong>VCFtools</strong>. This software is used for VCF manipulation and querying.</p>
<div class="callout callout-style-simple callout-none no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>VCF manipulation and querying refers to the processes of altering (manipulating) and extracting (querying) specific information from Variant Call Format (VCF) files, which are standardized text files used in bioinformatics to store and report genomic variations in sequenced samples. - Manipulation involves functions to read, write, or modify VCF data. - Querying involves selecting and formatting subsets of the data for analysis, quality control, or visualization.</p>
</div>
</div>
</div>
<p>After going to dockerhub and choosing one container, we copy the pull comand and run the following in the project server:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> pull vcftools_0.1.16-1.sif docker://biocontainers/vcftools:v0.1.16-1-deb_cv1</span></code></pre></div></div>
</section>
<section id="seqera" class="level4">
<h4 class="anchored" data-anchor-id="seqera">Seqera</h4>
<p>In the case of Seqera, users don’t upload their containers, but they develop container images as you request them.</p>
<p>To pull an image from this repository you need to set the container setting to Singularity (Apptainer old name).</p>
<p>Make sure the container is compiled before trying to pull it!!</p>
<p>Once it’s ready you can copy the text and pull it to your system with the following command:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> pull vcftools_0.1.17.sif oras://community.wave.seqera.io/library/vcftools:0.1.17--b541aa8d9f9213f9</span></code></pre></div></div>
</section>
</section>
<section id="running-containers" class="level3">
<h3 class="anchored" data-anchor-id="running-containers"><strong>2. Running Containers</strong></h3>
<p>Apptainer can be used to build the container from the image. Then you can either enter the container and run as if you had the exact same operating system as the person who built it, or you can run the software inside the container from outside of the container.</p>
<section id="running-from-the-outside" class="level4">
<h4 class="anchored" data-anchor-id="running-from-the-outside">Running from “the outside”</h4>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> exec vcftools_0.1.17.sif vcftools <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div></div>
<p>You can use <code>run</code>or <code>exec</code> to use the container. Note than using <code>run</code>it will launch the container and first run the <code>%runscript</code> if one is defined and then run you command.</p>
</section>
<section id="running-interactively-from-the-inside" class="level4">
<h4 class="anchored" data-anchor-id="running-interactively-from-the-inside">Running interactively from “the inside”</h4>
<p>There is also the possibility to enter the container and work interactively within it.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> shell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>name-of-container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></div>
<p>Remember that the container is a isolated system and if you want to use files from outside you will need to bind file paths using <code>-B</code>.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> shell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>name-of-container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> shell <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-B</span> outside/path:inside/path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>name-of-container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></div>
<p>To exit the container type <code>exit</code> and enter.</p>
</section>
<section id="running-containers-with-sbatch" class="level4">
<h4 class="anchored" data-anchor-id="running-containers-with-sbatch">Running containers with sbatch</h4>
<p>Apptainer containers can be run as part of a batch job if you integrate them int a SLURM job submission script.</p>
<p>We are going to add the container to our <code>FastQC</code>sbatch script.</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#! /bin/bash -l</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#SBATCH -A project_ID</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#SBATCH -t 30:00</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#SBATCH -n 1</span></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> exec container_image.sif fastqc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--noextract</span> ../data/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>fastq.gz</span></code></pre></div></div>
</section>
</section>
<section id="run-your-own-container" class="level3">
<h3 class="anchored" data-anchor-id="run-your-own-container"><strong>3. Run your own container</strong></h3>
<p>This is a computationally intesnive task. The containers are build froma definition file (<code>.def</code>extension).</p>
<p>Let´s build a container with a cow telling us the date!</p>
<p>Create a file called <code>lolcow.def</code> and add the following:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Bootstrap:</span> docker</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">From:</span> ubuntu:20.04</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%post</span></span>
<span id="cb7-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> update</span>
<span id="cb7-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> install cowsay lolcat fortune</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%environment</span></span>
<span id="cb7-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LC_ALL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>C</span>
<span id="cb7-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/usr/games:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%runscript</span></span>
<span id="cb7-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cowsay</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lolcat</span>    </span></code></pre></div></div>
<p>Then to build the conrainer use:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> build lolcow.sif lolcow.def</span></code></pre></div></div>
<p>You will get information on the staus of the build and it will tell you when it´s ready.</p>
<p>Then you can run your new container:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> run lolcow.sif</span></code></pre></div></div>
<p>If you want you can change the <code>%runscript</code>from your <code>lolcow.def</code> file and change <code>date</code>for <code>fortune</code>. Now you will get the same cow but with a tale.</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-use-and-create-containers/</guid>
  <pubDate>Tue, 07 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-use-and-create-containers/containers.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Post With Code</title>
  <dc:creator>Harlow Malloc</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/post-with-code/</link>
  <description><![CDATA[ 






<p>This is a post with executable code.</p>



 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/post-with-code/</guid>
  <pubDate>Mon, 06 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://Lara-llh.github.io/MedBioInfo_blog/posts/post-with-code/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to make a Quarto blog</title>
  <dc:creator>Lara Leal</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-make-a-quarto-blog/</link>
  <description><![CDATA[ 






<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-make-a-quarto-blog/quartoblogimage.jpg" class="post-header img-fluid"></p>
<p>In this post we are going to learn how to create a Quarto blog.</p>
<section id="part-1-create-the-blog" class="level1">
<h1><strong>Part 1: Create the blog</strong></h1>
<p>The first step is to create a Quarto blog project. In order to do so, you go to View and open the Command Palette in VScode and then type Quarto: Create Project. Select Blog project and choose the name and location in your computer.</p>
</section>
<section id="part-2-edit" class="level1">
<h1><strong>Part 2: Edit</strong></h1>
<p>Create a new post by generating a new folder in the posts folder of your Quarto blog. Inside this new folder create a new index.qmd file.</p>
<p>This file should contain some variations of the following information between two lines of —:</p>
<ul>
<li>title: “Title”</li>
<li>author: “your name”</li>
<li>date: “YYYY-MM-DD”</li>
<li>categories: []</li>
<li>image: “image.jpg”</li>
</ul>
<p>After this coding information you include the content you want to have in your blog.</p>
<p>There is a lot of options for the code. Some useful resorces to explore the different alternatives that you can integrate in your code are:</p>
<ul>
<li><a href="https://quarto.org/docs/websites/website-listings.html">Listings</a></li>
<li><a href="https://quarto.org/docs/output-formats/html-code.html">Executable code</a></li>
<li><a href="https://quarto.org/docs/output-formats/html-themes.html">Themes</a></li>
<li><a href="https://quarto.org/docs/output-formats/html-lightbox-figures.html">Images formating / Lightbox figures</a></li>
</ul>
</section>
<section id="part-3-publish-your-blog" class="level1">
<h1><strong>Part 3: Publish your blog</strong></h1>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> pwd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> you have to make sure you are working in the directory of your blog</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> cd <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"directory"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> if you need to set the working directory</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> to initialize the blog directory as a git repository</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> to check </span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote add origin git@github.com:user/blogname.git</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> publish gh-pages </span></code></pre></div></div>
<section id="add-the-blog-to-github-using-github-actions" class="level3">
<h3 class="anchored" data-anchor-id="add-the-blog-to-github-using-github-actions">Add the blog to GitHub using GitHub Actions</h3>
<p>Enter your GitHub account and create a new repository</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> to add all the untracked files <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shown</span> with the git status command<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> the repository</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"message to track the changes"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> to commit all the changes made</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin main</span></code></pre></div></div>
<div class="callout callout-style-simple callout-none no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>You have to follow this three steps every time you make changes in your Quarto blog and want to push them to your GitHub repository.</p>
</div>
</div>
</div>
<p>For more information on how to automate the publishing of your blog you can follow this <a href="https://quarto.org/docs/publishing/github-pages.html#github-action">Tutorial on using GitHub Actions.</a></p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-make-a-quarto-blog/</guid>
  <pubDate>Mon, 06 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://Lara-llh.github.io/MedBioInfo_blog/posts/how-to-make-a-quarto-blog/quartoblogimage.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Welcome To My Blog</title>
  <dc:creator>Tristan O&#39;Malley</dc:creator>
  <link>https://Lara-llh.github.io/MedBioInfo_blog/posts/welcome/</link>
  <description><![CDATA[ 






<p>This is the first post in a Quarto blog. Welcome!</p>
<p><img src="https://Lara-llh.github.io/MedBioInfo_blog/posts/welcome/thumbnail.jpg" class="img-fluid"></p>
<p>Since this post doesn’t specify an explicit <code>image</code>, the first image in the post will be used in the listing page of posts.</p>



 ]]></description>
  <category>news</category>
  <guid>https://Lara-llh.github.io/MedBioInfo_blog/posts/welcome/</guid>
  <pubDate>Fri, 03 Oct 2025 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
